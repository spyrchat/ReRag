# Weighted Sum Hybrid Retrieval Optimization
description: "Hybrid retrieval with Voyage Lite using weighted sum fusion"

# Dataset configuration
dataset:
  path: "/home/spiros/Desktop/Thesis/datasets/sosum/data"
  use_ground_truth: true
  
# Retrieval configuration
retrieval:
  type: "hybrid"
  top_k: 20
  score_threshold: 0.01
  fusion_method: weighted_sum
  dense_weight: 0.8  # Emphasize dense retrieval more
  sparse_weight: 0.2

# Embedding configuration
embedding:
  dense:
    provider: voyage
    model: voyage-3.5-lite
    dimensions: 1024
    api_key_env: VOYAGE_API_KEY
    batch_size: 32
    vector_name: dense
  sparse:
    provider: sparse
    model: Qdrant/bm25
    vector_name: sparse
  strategy: hybrid

# Qdrant collection
qdrant:
  collection: sosum_stackoverflow_hybrid_v1
  dense_vector_name: dense
  sparse_vector_name: sparse

# Fusion method configuration
fusion:
  method: weighted_sum
  dense_weight: 0.8  # Emphasize dense retrieval more
  sparse_weight: 0.2

# Retrievers configuration (required by RetrievalPipelineFactory)
retrievers:
  hybrid:
    type: hybrid
    top_k: 15
    score_threshold: 0.05
    dense_weight: 0.65
    sparse_weight: 0.35
    fusion_method: weighted_sum
    fusion:
      method: weighted_sum
      dense_weight: 0.65
      sparse_weight: 0.35
    performance:
      batch_size: 32
      enable_caching: true
      lazy_initialization: true
      parallel_search: false
    qdrant:
      collection_name: sosum_stackoverflow_hybrid_v1
      dense_vector_name: dense
      sparse_vector_name: sparse
      hybrid_config:
        alpha: 0.5
        reciprocal_rank_constant: 60

# Evaluation configuration
evaluation:
  k_values: [1, 5, 10, 15, 20]
  metrics:
    retrieval: ["precision@k", "recall@k", "mrr", "ndcg@k"]

# Experiment parameters
max_queries: 100
experiment_name: "hybrid_weighted_voyage_lite"
